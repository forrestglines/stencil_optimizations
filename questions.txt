4 types of functions to test:

Low  arthmetic intensity, no stencil
High arthmetic intensity, no stencil
Low  arthmetic intensity, with stencil
High arthmetic intensity, with stencil
Varying problem size
Varying register use?

How to get SIMD computations on the CPU?

Can Kokkos give the same performance as CUDA?

Does UVM incur a performance penalty?
Even if the data stays on the GPU?
In CUDA? In Kokkos?
How big a performance penalty is there if data is transferred on and off the GPU every time step?

How do you best utilize the explicit caches?
On GPUs?
Can you do this with Kokkos?
On CPUs with SIMD?

Do aligned data accesses matter?
On the GPU?
On the CPU?

What if boundaries are computed in a separate function?
    -On the GPU?
    -On the CPU? (w/, w/o UVM)

What if boundaries are transferred via MPI?
    -Between CUDA addresses? 
    -UVM?
    -Same node? Separate nodes?
    -cudaAdvise - in Kokkos too?

How does high register use change these answers? (EG. in reconstruction?)

Can OpenACC give the same performance as Kokkos? As CUDA?

Do these same considerations apply for the FPGAs?



========================================
What is the fastest CPU implementation?

What is the fastest Kokkos implementation for CPUs?

What is the fastest Kokkos implementation for GPUs?

What is the fastest Kokkos implementation for both CPUs and GPUs?

What is the fastest CUDA implementation for GPUs?

What is the easiest+fast Kokkos implementation for both CPUs and GPUs?

How do all of these compare?
